{"version":3,"sources":[" [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/arrayfromiterable] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:es6/util/inherits] ","../../../../../usr/local/lib/node_modules/autotrack/node_modules/dom-utils/lib/matches.js","../../../../../usr/local/lib/node_modules/autotrack/node_modules/dom-utils/lib/parents.js","../../../../../usr/local/lib/node_modules/autotrack/node_modules/dom-utils/lib/delegate.js","../../../../../usr/local/lib/node_modules/autotrack/node_modules/dom-utils/lib/closest.js","../../../../../usr/local/lib/node_modules/autotrack/lib/plugins/event-tracker.js","../../../../../usr/local/lib/node_modules/autotrack/node_modules/dom-utils/lib/get-attributes.js","../../../../../usr/local/lib/node_modules/autotrack/lib/method-chain.js","../../../../../usr/local/lib/node_modules/autotrack/lib/utilities.js","../../../../../usr/local/lib/node_modules/autotrack/lib/provide.js","../../../../../usr/local/lib/node_modules/autotrack/lib/constants.js","../../../../../usr/local/lib/node_modules/autotrack/lib/usage.js","../../../../../usr/local/lib/node_modules/autotrack/lib/event-emitter.js","../../../../../usr/local/lib/node_modules/autotrack/lib/store.js","../../../../../usr/local/lib/node_modules/autotrack/lib/session.js","../../../../../usr/local/lib/node_modules/autotrack/lib/plugins/page-visibility-tracker.js","../../../../../usr/local/lib/node_modules/autotrack/lib/plugins/media-query-tracker.js"],"names":["$jscomp.defineProperty","$jscomp.global","$jscomp.initSymbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","proto","window","Element","prototype","nativeMatches","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","element","test","nodeType","i","item","selector","call","nodes","parentNode","querySelectorAll","node","parents","list","push","delegate","eventType","callback","listener","event","delegateTarget","opts","composed","composedPath","target","parentElements","concat","parent","document","useCapture","ancestor","addEventListener","destroy","removeEventListener","getAttributes","attrs","map","attributes","length","attr","name","value","instances","constructor","MethodChain","context","methodName","originalMethodReference","isTask","get","methodChain","boundMethodChain","wrappedMethod","this.wrappedMethod","lastBoundMethod","$jscomp.arrayFromIterable","args","set","add","methodOverride","getOrCreateMethodChain","rebindMethodChain","remove","index","indexOf","splice","method","previousMethod","bind","filter","h","createFieldsObj","defaultFields","userFields","tracker","hitFilter","originalBuildHitTask","buildHitTask","model","assign","getAttributeFields","prefix","attributeFields","Object","keys","forEach","attribute","field","camelCase","slice","debounce","fn","wait","timeout","clearTimeout","setTimeout","queueMap","deferUntilPluginsLoaded","processQueue","ref","send","MethodChain.remove","trackingId","queue","ref.send","originalMethod","MethodChain.add","len","sources","source","key","hasOwnProperty","str","replace","match","p1","toUpperCase","isObject","uuid","b","a","toString","Math","random","provide","pluginName","pluginConstructor","gaAlias","GoogleAnalyticsObject","q","gaDevIds","DEV_ID","gaplugins","charAt","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","PLUGIN_COUNT","trackUsage","plugin","VERSION","usageHex","parseInt","toAdd","usageBin","substr","EventTracker","defaultOpts","events","fieldsObj","attributePrefix","handleEvents","delegates","getAttribute","split","type","hitType","transport","EventEmitter","registry_","on","getRegistry_","emit","isListening","browserSupportsLocalStorage","Store","defaults","key_","defaults_","cache_","$jscomp.inherits","getOrCreate","namespace","AUTOTRACK_PREFIX","join","storageListener","isSupported_","localStorage","setItem","removeItem","err","Store.isSupported_","parse","getItem","newData","JSON","stringify","clear","store","oldData","oldValue","newValue","data","Session","timeZone","Session.DEFAULT_TIMEOUT","sendHitTaskOverride","dateTimeFormatter","Intl","DateTimeFormat","Store.getOrCreate","defaultProps","hitTime","isExpired","id","getId","sessionData","oldHitTime","currentDate","Date","oldHitDate","MINUTES","datesAreDifferentInTimezone","format","sessionControl","sessionWillStart","sessionWillEnd","PAGE_ID","PageVisibilityTracker","visibilityState","sessionTimeout","visibleThreshold","sendInitialPageview","lastPageState","visibleThresholdTimeout_","isInitialPageviewSent_","trackerSetOverride","handleChange","handleWindowUnload","handleExternalStoreSet","session","Session.getOrCreate","VISIBLE","sendPageview","isPageLoad","time","state","pageId","sessionId","pageLoadsMetricIndex","NULL_DIMENSION","sendPageLoad","HIDDEN","lastStoredChange","getAndValidateChangeData","change","sendPageVisibilityEvent","delta","deltaInSeconds","round","SECONDS","nonInteraction","eventCategory","eventAction","eventValue","eventLabel","queueTime","visibleMetricIndex","fields","page","mediaMap","MediaQueryTracker","matchMedia","changeTemplate","changeTimeout","definitions","Array","isArray","changeListeners","processMediaQueries","definition","dimensionIndex","mediaName","getMatchName","addChangeListeners","items","getMediaList","media","mql","handleChanges","addListener","removeListener"],"mappings":"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","file":"","sourcesContent":[null,null,null,null,null,null,null,"const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, getAttributeFields} from '../utilities';\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\nclass EventTracker {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    const selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, selector,\n          this.handleEvents, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all events on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n  handleEvents(event, element) {\n    const prefix = this.opts.attributePrefix;\n    const events = element.getAttribute(prefix + 'on').split(/\\s*,\\s*/);\n\n    // Ensures the type matches one of the events specified on the element.\n    if (events.indexOf(event.type) < 0) return;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    const attributeFields = getAttributeFields(element, prefix);\n    const userFields = assign({}, this.opts.fieldsObj, attributeFields);\n    const hitType = attributeFields.hitType || 'event';\n\n    this.tracker.send(hitType, createFieldsObj(defaultFields,\n        userFields, this.tracker, this.opts.hitFilter, element, event));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).remove(methodOverride);\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\nimport MethodChain from './method-chain';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(\n    defaultFields, userFields, tracker = undefined,\n    hitFilter = undefined, target = undefined, event = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n// Maps trackers to queue by tracking ID.\nconst queueMap = {};\n\n/**\n * Queues a function for execution in the next call stack, or immediately\n * before any send commands are executed on the tracker. This allows\n * autotrack plugins to defer running commands until after all other plugins\n * are required but before any other hits are sent.\n * @param {!Tracker} tracker\n * @param {!Function} fn\n */\nexport function deferUntilPluginsLoaded(tracker, fn) {\n  const trackingId = tracker.get('trackingId');\n  const ref = queueMap[trackingId] = queueMap[trackingId] || {};\n\n  const processQueue = () => {\n    clearTimeout(ref.timeout);\n    if (ref.send) {\n      MethodChain.remove(tracker, 'send', ref.send);\n    }\n    delete queueMap[trackingId];\n\n    ref.queue.forEach((fn) => fn());\n  };\n\n  clearTimeout(ref.timeout);\n  ref.timeout = setTimeout(processQueue, 0);\n  ref.queue = ref.queue || [];\n  ref.queue.push(fn);\n\n  if (!ref.send) {\n    ref.send = (originalMethod) => {\n      return (...args) => {\n        processQueue();\n        originalMethod(...args);\n      };\n    };\n    MethodChain.add(tracker, 'send', ref.send);\n  }\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i++) {\n    const source = Object(sources[i]);\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.4.1';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nexport default class EventEmitter {\n  /**\n   * Creates the event registry.\n   */\n  constructor() {\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n  on(event, fn) {\n    this.getRegistry_(event).push(fn);\n  }\n\n  /**\n   * Removes a handler function from the registry for the passed event.\n   * @param {string=} event The event name.\n   * @param {Function=} fn The handler to be removed.\n   */\n  off(event = undefined, fn = undefined) {\n    if (event && fn) {\n      const eventRegistry = this.getRegistry_(event);\n      const handlerIndex = eventRegistry.indexOf(fn);\n      if (handlerIndex > -1) {\n        eventRegistry.splice(handlerIndex, 1);\n      }\n    } else {\n      this.registry_ = {};\n    }\n  }\n\n  /**\n   * Runs all registered handlers for the passed event with the optional args.\n   * @param {string} event The event name.\n   * @param {...*} args The arguments to be passed to the handler.\n   */\n  emit(event, ...args) {\n    this.getRegistry_(event).forEach((fn) => fn(...args));\n  }\n\n  /**\n   * Returns the total number of event handlers currently registered.\n   * @return {number}\n   */\n  getEventCount() {\n    let eventCount = 0;\n    Object.keys(this.registry_).forEach((event) => {\n      eventCount += this.getRegistry_(event).length;\n    });\n    return eventCount;\n  }\n\n  /**\n   * Returns an array of handlers associated with the passed event name.\n   * If no handlers have been registered, an empty array is returned.\n   * @private\n   * @param {string} event The event name.\n   * @return {!Array} An array of handler functions.\n   */\n  getRegistry_(event) {\n    return this.registry_[event] = (this.registry_[event] || []);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport EventEmitter from './event-emitter';\nimport {assign} from './utilities';\n\n\nconst AUTOTRACK_PREFIX = 'autotrack';\nconst instances = {};\nlet isListening = false;\n\n\n/** @type {boolean|undefined} */\nlet browserSupportsLocalStorage;\n\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\nexport default class Store extends EventEmitter {\n  /**\n   * Gets an existing instance for the passed arguements or creates a new\n   * instance if one doesn't exist.\n   * @param {string} trackingId The tracking ID for the GA property.\n   * @param {string} namespace A namespace unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   * @return {Store} The Store instance.\n   */\n  static getOrCreate(trackingId, namespace, defaults) {\n    const key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n    // Don't create multiple instances for the same tracking Id and namespace.\n    if (!instances[key]) {\n      instances[key] = new Store(key, defaults);\n      if (!isListening) initStorageListener();\n    }\n    return instances[key];\n  }\n\n  /**\n   * Returns true if the browser supports and can successfully write to\n   * localStorage. The results is cached so this method can be invoked many\n   * times with no extra performance cost.\n   * @private\n   * @return {boolean}\n   */\n  static isSupported_() {\n    if (browserSupportsLocalStorage != null) {\n      return browserSupportsLocalStorage;\n    }\n\n    try {\n      window.localStorage.setItem(AUTOTRACK_PREFIX, AUTOTRACK_PREFIX);\n      window.localStorage.removeItem(AUTOTRACK_PREFIX);\n      browserSupportsLocalStorage = true;\n    } catch (err) {\n      browserSupportsLocalStorage = false;\n    }\n    return browserSupportsLocalStorage;\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @return {string|null} The stored value.\n   */\n  static get_(key) {\n    return window.localStorage.getItem(key);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @param {string} value The value to store.\n   */\n  static set_(key, value) {\n    window.localStorage.setItem(key, value);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   */\n  static clear_(key) {\n    window.localStorage.removeItem(key);\n  }\n\n  /**\n   * @param {string} key A key unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   */\n  constructor(key, defaults = {}) {\n    super();\n    this.key_ = key;\n    this.defaults_ = defaults;\n\n    /** @type {?Object} */\n    this.cache_ = null; // Will be set after the first get.\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store. If the cache is\n   * already populated, return it as is (since it's always kept up-to-date\n   * and in sync with activity in other windows via the `storage` event).\n   * TODO(philipwalton): Implement schema migrations if/when a new\n   * schema version is introduced.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n  get() {\n    if (this.cache_) {\n      return this.cache_;\n    } else {\n      if (Store.isSupported_()) {\n        try {\n          this.cache_ = parse(Store.get_(this.key_));\n        } catch(err) {\n          // Do nothing.\n        }\n      }\n      return this.cache_ = assign({}, this.defaults_, this.cache_);\n    }\n  }\n\n  /**\n   * Saves the passed data object to localStorage,\n   * merging it with the existing data.\n   * @param {Object} newData The data to save.\n   */\n  set(newData) {\n    this.cache_ = assign({}, this.defaults_, this.cache_, newData);\n\n    if (Store.isSupported_()) {\n      try {\n        Store.set_(this.key_, JSON.stringify(this.cache_));\n      } catch(err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Clears the data in localStorage for the current store.\n   */\n  clear() {\n    this.cache_ = {};\n    if (Store.isSupported_()) {\n      try {\n        Store.clear_(this.key_);\n      } catch(err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Removes the store instance for the global instances map. If this is the\n   * last store instance, the storage listener is also removed.\n   * Note: this does not erase the stored data. Use `clear()` for that.\n   */\n  destroy() {\n    delete instances[this.key_];\n    if (!Object.keys(instances).length) {\n      removeStorageListener();\n    }\n  }\n}\n\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  const store = instances[event.key];\n  if (store) {\n    const oldData = assign({}, store.defaults_, parse(event.oldValue));\n    const newData = assign({}, store.defaults_, parse(event.newValue));\n\n    store.cache_ = newData;\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n\n/**\n * Parses a source string as JSON\n * @param {string|null} source\n * @return {!Object} The JSON object.\n */\nfunction parse(source) {\n  let data = {};\n  if (source) {\n    try {\n      data = /** @type {!Object} */ (JSON.parse(source));\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n  return data;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from './method-chain';\nimport Store from './store';\nimport {now, uuid} from './utilities';\n\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n\nconst instances = {};\n\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\nexport default class Session {\n  /**\n   * Gets an existing instance for the passed arguments or creates a new\n   * instance if one doesn't exist.\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   * @return {Session} The Session instance.\n   */\n  static getOrCreate(tracker, timeout, timeZone) {\n    // Don't create multiple instances for the same property.\n    const trackingId = tracker.get('trackingId');\n    if (instances[trackingId]) {\n      return instances[trackingId];\n    } else {\n      return instances[trackingId] = new Session(tracker, timeout, timeZone);\n    }\n  }\n\n  /**\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   */\n  constructor(tracker, timeout, timeZone) {\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    MethodChain.add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter =\n          new Intl.DateTimeFormat('en-US', {timeZone: this.timeZone});\n    } catch(err) {\n      // Do nothing.\n    }\n\n    /** @type {SessionStoreData} */\n    const defaultProps = {\n      hitTime: 0,\n      isExpired: false,\n    };\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'session', defaultProps);\n\n    // Ensure the session has an ID.\n    if (!this.store.get().id) {\n      this.store.set(/** @type {SessionStoreData} */ ({id: uuid()}));\n    }\n  }\n\n  /**\n   * Returns the ID of the current session.\n   * @return {string}\n   */\n  getId() {\n    return this.store.get().id;\n  }\n\n  /**\n   * Accepts a session ID and returns true if the specified session has\n   * evidentially expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {string} id The ID of a session to check for expiry.\n   * @return {boolean} True if the session has not exp\n   */\n  isExpired(id = this.getId()) {\n    // If a session ID is passed and it doesn't match the current ID,\n    // assume it's from an expired session. If no ID is passed, assume the ID\n    // of the current session.\n    if (id != this.getId()) return true;\n\n    /** @type {SessionStoreData} */\n    const sessionData = this.store.get();\n\n    // `isExpired` will be `true` if the sessionControl field was set to\n    // 'end' on the previous hit.\n    if (sessionData.isExpired) return true;\n\n    const oldHitTime = sessionData.hitTime;\n\n    // Only consider a session expired if previous hit time data exists, and\n    // the previous hit time is greater than that session timeout period or\n    // the hits occurred on different days in the session timezone.\n    if (oldHitTime) {\n      const currentDate = new Date();\n      const oldHitDate = new Date(oldHitTime);\n      if (currentDate - oldHitDate > (this.timeout * MINUTES) ||\n          this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n        return true;\n      }\n    }\n\n    // For all other cases return false.\n    return false;\n  }\n\n  /**\n   * Returns true if (and only if) the timezone date formatting is supported\n   * in the current browser and if the two dates are definitively not the\n   * same date in the session timezone. Anything short of this returns false.\n   * @param {!Date} d1\n   * @param {!Date} d2\n   * @return {boolean}\n   */\n  datesAreDifferentInTimezone(d1, d2) {\n    if (!this.dateTimeFormatter) {\n      return false;\n    } else {\n      return this.dateTimeFormatter.format(d1)\n          != this.dateTimeFormatter.format(d2);\n    }\n  }\n\n  /**\n   * Keeps track of when the previous hit was sent to determine if a session\n   * has expired. Also inspects the `sessionControl` field to handles\n   * expiration accordingly.\n   * @param {function(!Model)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(!Model)}\n   */\n  sendHitTaskOverride(originalMethod) {\n    return (model) => {\n      originalMethod(model);\n\n      const sessionControl = model.get('sessionControl');\n      const sessionWillStart = sessionControl == 'start' || this.isExpired();\n      const sessionWillEnd = sessionControl == 'end';\n\n      /** @type {SessionStoreData} */\n      const sessionData = this.store.get();\n      sessionData.hitTime = now();\n      if (sessionWillStart) {\n        sessionData.isExpired = false;\n        sessionData.id = uuid();\n      }\n      if (sessionWillEnd) {\n        sessionData.isExpired = true;\n      }\n      this.store.set(sessionData);\n    };\n  }\n\n  /**\n   * Restores the tracker's original `sendHitTask` to the state before\n   * session control was initialized and removes this instance from the global\n   * store.\n   */\n  destroy() {\n    MethodChain.remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n    this.store.destroy();\n    delete instances[this.tracker.get('trackingId')];\n  }\n}\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, deferUntilPluginsLoaded,\n    isObject, now, uuid} from '../utilities';\n\n\nconst HIDDEN = 'hidden';\nconst VISIBLE = 'visible';\nconst PAGE_ID = uuid();\nconst SECONDS = 1000;\n\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\nclass PageVisibilityTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!document.visibilityState) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    const defaultOpts = {\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      visibleThreshold: 5 * SECONDS,\n      // timeZone: undefined,\n      sendInitialPageview: false,\n      // pageLoadsMetricIndex: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.lastPageState = document.visibilityState;\n    this.visibleThresholdTimeout_ = null;\n    this.isInitialPageviewSent_ = false;\n\n    // Binds methods to `this`.\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWindowUnload = this.handleWindowUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/page-visibility-tracker');\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    // Creates the session and binds session events.\n    this.session = Session.getOrCreate(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    window.addEventListener('unload', this.handleWindowUnload);\n    document.addEventListener('visibilitychange', this.handleChange);\n\n    // Postpone sending any hits until the next call stack, which allows all\n    // autotrack plugins to be required sync before any hits are sent.\n    deferUntilPluginsLoaded(this.tracker, () => {\n      if (document.visibilityState == VISIBLE) {\n        if (this.opts.sendInitialPageview) {\n          this.sendPageview({isPageLoad: true});\n          this.isInitialPageviewSent_ = true;\n        }\n        this.store.set(/** @type {PageVisibilityStoreData} */ ({\n          time: now(),\n          state: VISIBLE,\n          pageId: PAGE_ID,\n          sessionId: this.session.getId(),\n        }));\n      } else {\n        if (this.opts.sendInitialPageview && this.opts.pageLoadsMetricIndex) {\n          this.sendPageLoad();\n        }\n      }\n    });\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n  handleChange() {\n    if (!(document.visibilityState == VISIBLE ||\n        document.visibilityState == HIDDEN)) {\n      return;\n    }\n\n    const lastStoredChange = this.getAndValidateChangeData();\n\n    /** @type {PageVisibilityStoreData} */\n    const change = {\n      time: now(),\n      state: document.visibilityState,\n      pageId: PAGE_ID,\n      sessionId: this.session.getId(),\n    };\n\n    // If the visibilityState has changed to visible and the initial pageview\n    // has not been sent (and the `sendInitialPageview` option is `true`).\n    // Send the initial pageview now.\n    if (document.visibilityState == VISIBLE &&\n        this.opts.sendInitialPageview && !this.isInitialPageviewSent_) {\n      this.sendPageview();\n      this.isInitialPageviewSent_ = true;\n    }\n\n    // If the visibilityState has changed to hidden, clear any scheduled\n    // pageviews waiting for the visibleThreshold timeout.\n    if (document.visibilityState == HIDDEN && this.visibleThresholdTimeout_) {\n      clearTimeout(this.visibleThresholdTimeout_);\n    }\n\n    if (this.session.isExpired(lastStoredChange.sessionId)) {\n      this.store.clear();\n      if (this.lastPageState == HIDDEN &&\n          document.visibilityState == VISIBLE) {\n        // If the session has expired, changes from hidden to visible should\n        // be considered a new pageview rather than a visibility event.\n        // This behavior ensures all sessions contain a pageview so\n        // session-level page dimensions and metrics (e.g. ga:landingPagePath\n        // and ga:entrances) are correct.\n        // Also, in order to prevent false positives, we add a small timeout\n        // that is cleared if the visibilityState changes to hidden shortly\n        // after the change to visible. This can happen if a user is quickly\n        // switching through their open tabs but not actually interacting with\n        // and of them. It can also happen when a user goes to a tab just to\n        // immediately close it. Such cases should not be considered pageviews.\n        clearTimeout(this.visibleThresholdTimeout_);\n        this.visibleThresholdTimeout_ = setTimeout(() => {\n          this.store.set(change);\n          this.sendPageview({hitTime: change.time});\n        }, this.opts.visibleThreshold);\n      }\n    } else {\n      if (lastStoredChange.pageId == PAGE_ID &&\n          lastStoredChange.state == VISIBLE) {\n        this.sendPageVisibilityEvent(lastStoredChange);\n      }\n      this.store.set(change);\n    }\n\n    this.lastPageState = document.visibilityState;\n  }\n\n  /**\n   * Retroactively updates the stored change data in cases where it's known to\n   * be out of sync.\n   * This plugin keeps track of each visiblity change and stores the last one\n   * in localStorage. LocalStorage is used to handle situations where the user\n   * has multiple page open at the same time and we don't want to\n   * double-report page visibility in those cases.\n   * However, a problem can occur if a user closes a page when one or more\n   * visible pages are still open. In such cases it's impossible to know\n   * which of the remaining pages the user will interact with next.\n   * To solve this problem we wait for the next change on any page and then\n   * retroactively update the stored data to reflect the current page as being\n   * the page on which the last change event occured and measure visibility\n   * from that point.\n   * @return {!PageVisibilityStoreData}\n   */\n  getAndValidateChangeData() {\n    const lastStoredChange =\n        /** @type {PageVisibilityStoreData} */ (this.store.get());\n\n    if (this.lastPageState == VISIBLE &&\n        lastStoredChange.state == HIDDEN &&\n        lastStoredChange.pageId != PAGE_ID) {\n      lastStoredChange.state = VISIBLE;\n      lastStoredChange.pageId = PAGE_ID;\n      this.store.set(lastStoredChange);\n    }\n    return lastStoredChange;\n  }\n\n  /**\n   * Sends a Page Visibility event to track the time this page was in the\n   * visible state (assuming it was in that state long enough to meet the\n   * threshold).\n   * @param {!PageVisibilityStoreData} lastStoredChange\n   * @param {{hitTime: (number|undefined)}=} param1\n   *     - hitTime: A hit timestap used to help ensure original order in cases\n   *                where the send is delayed.\n   */\n  sendPageVisibilityEvent(lastStoredChange, {hitTime} = {}) {\n    const delta = this.getTimeSinceLastStoredChange(\n        lastStoredChange, {hitTime});\n\n    // If the detla is greater than the visibileThreshold, report it.\n    if (delta && delta >= this.opts.visibleThreshold) {\n      const deltaInSeconds = Math.round(delta / SECONDS);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        nonInteraction: true,\n        eventCategory: 'Page Visibility',\n        eventAction: 'track',\n        eventValue: deltaInSeconds,\n        eventLabel: NULL_DIMENSION,\n      };\n\n      if (hitTime) {\n        defaultFields.queueTime = now() - hitTime;\n      }\n\n      // If a custom metric was specified, set it equal to the event value.\n      if (this.opts.visibleMetricIndex) {\n        defaultFields['metric' + this.opts.visibleMetricIndex] = deltaInSeconds;\n      }\n\n      this.tracker.send('event',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n  }\n\n  /**\n   * Sends a page load event.\n   */\n  sendPageLoad() {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'page load',\n      eventLabel: NULL_DIMENSION,\n      ['metric' + this.opts.pageLoadsMetricIndex]: 1,\n      nonInteraction: true,\n    };\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Sends a pageview, optionally calculating an offset if hitTime is passed.\n   * @param {{\n   *   hitTime: (number|undefined),\n   *   isPageLoad: (boolean|undefined)\n   * }=} param1\n   *     hitTime: The timestamp of the current hit.\n   *     isPageLoad: True if this pageview was also a page load.\n   */\n  sendPageview({hitTime, isPageLoad} = {}) {\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    if (hitTime) {\n      defaultFields.queueTime = now() - hitTime;\n    }\n    if (isPageLoad && this.opts.pageLoadsMetricIndex) {\n      defaultFields['metric' + this.opts.pageLoadsMetricIndex] = 1;\n    }\n\n    this.tracker.send('pageview',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function((Object|string), (string|undefined))} originalMethod\n   *     A reference to the overridden method.\n   * @return {function((Object|string), (string|undefined))}\n   */\n  trackerSetOverride(originalMethod) {\n    return (field, value) => {\n      /** @type {!FieldsObj} */\n      const fields = isObject(field) ? field : {[field]: value};\n      if (fields.page && fields.page !== this.tracker.get('page')) {\n        if (this.lastPageState == VISIBLE) {\n          this.handleChange();\n        }\n      }\n      originalMethod(field, value);\n    };\n  }\n\n  /**\n   * Calculates the time since the last visibility change event in the current\n   * session. If the session has expired the reported time is zero.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @param {{hitTime: (number|undefined)}=} param1\n   *     hitTime: The time of the current hit (defaults to now).\n   * @return {number} The time (in ms) since the last change.\n   */\n  getTimeSinceLastStoredChange(lastStoredChange, {hitTime} = {}) {\n    return lastStoredChange.time ?\n        (hitTime || now()) - lastStoredChange.time : 0;\n  }\n\n  /**\n   * Handles responding to the `storage` event.\n   * The code on this page needs to be informed when other tabs or windows are\n   * updating the stored page visibility state data. This method checks to see\n   * if a hidden state is stored when there are still visible tabs open, which\n   * can happen if multiple windows are open at the same time.\n   * @param {PageVisibilityStoreData} newData\n   * @param {PageVisibilityStoreData} oldData\n   */\n  handleExternalStoreSet(newData, oldData) {\n    // If the change times are the same, then the previous write only\n    // updated the active page ID. It didn't enter a new state and thus no\n    // hits should be sent.\n    if (newData.time == oldData.time) return;\n\n    // Page Visibility events must be sent by the tracker on the page\n    // where the original event occurred. So if a change happens on another\n    // page, but this page is where the previous change event occurred, then\n    // this page is the one that needs to send the event (so all dimension\n    // data is correct).\n    if (oldData.pageId == PAGE_ID &&\n        oldData.state == VISIBLE &&\n        !this.session.isExpired(oldData.sessionId)) {\n      this.sendPageVisibilityEvent(oldData, {hitTime: newData.time});\n    }\n  }\n\n  /**\n   * Handles responding to the `unload` event.\n   * Since some browsers don't emit a `visibilitychange` event in all cases\n   * where a page might be unloaded, it's necessary to hook into the `unload`\n   * event to ensure the correct state is always stored.\n   */\n  handleWindowUnload() {\n    // If the stored visibility state isn't hidden when the unload event\n    // fires, it means the visibilitychange event didn't fire as the document\n    // was being unloaded, so we invoke it manually.\n    if (this.lastPageState != HIDDEN) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.store.destroy();\n    this.session.destroy();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n    window.removeEventListener('unload', this.handleWindowUnload);\n    document.removeEventListener('visibilitychange', this.handleChange);\n  }\n}\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        debounce, isObject, toArray} from '../utilities';\n\n\n/**\n * Declares the MediaQueryList instance cache.\n */\nconst mediaMap = {};\n\n\n/**\n * Class for the `mediaQueryTracker` analytics.js plugin.\n * @implements {MediaQueryTrackerPublicInterface}\n */\nclass MediaQueryTracker {\n  /**\n   * Registers media query tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MEDIA_QUERY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.matchMedia) return;\n\n    /** @type {MediaQueryTrackerOpts} */\n    const defaultOpts = {\n      // definitions: unefined,\n      changeTemplate: this.changeTemplate,\n      changeTimeout: 1000,\n      fieldsObj: {},\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {MediaQueryTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    // Exits early if media query data doesn't exist.\n    if (!isObject(this.opts.definitions)) return;\n\n    this.opts.definitions = toArray(this.opts.definitions);\n    this.tracker = tracker;\n    this.changeListeners = [];\n\n    this.processMediaQueries();\n  }\n\n  /**\n   * Loops through each media query definition, sets the custom dimenion data,\n   * and adds the change listeners.\n   */\n  processMediaQueries() {\n    this.opts.definitions.forEach((definition) => {\n      // Only processes definitions with a name and index.\n      if (definition.name && definition.dimensionIndex) {\n        const mediaName = this.getMatchName(definition);\n        this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n        this.addChangeListeners(definition);\n      }\n    });\n  }\n\n  /**\n   * Takes a definition object and return the name of the matching media item.\n   * If no match is found, the NULL_DIMENSION value is returned.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension.\n   * @return {string} The name of the matched media or NULL_DIMENSION.\n   */\n  getMatchName(definition) {\n    let match;\n\n    definition.items.forEach((item) => {\n      if (getMediaList(item.media).matches) {\n        match = item;\n      }\n    });\n    return match ? match.name : NULL_DIMENSION;\n  }\n\n  /**\n   * Adds change listeners to each media query in the definition list.\n   * Debounces the changes to prevent unnecessary hits from being sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  addChangeListeners(definition) {\n    definition.items.forEach((item) => {\n      const mql = getMediaList(item.media);\n      const fn = debounce(() => {\n        this.handleChanges(definition);\n      }, this.opts.changeTimeout);\n\n      mql.addListener(fn);\n      this.changeListeners.push({mql, fn});\n    });\n  }\n\n  /**\n   * Handles changes to the matched media. When the new value differs from\n   * the old value, a change event is sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  handleChanges(definition) {\n    const newValue = this.getMatchName(definition);\n    const oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n    if (newValue !== oldValue) {\n      this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: definition.name,\n        eventAction: 'change',\n        eventLabel: this.opts.changeTemplate(oldValue, newValue),\n        nonInteraction: true,\n      };\n      this.tracker.send('event', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    for (let i = 0, listener; listener = this.changeListeners[i]; i++) {\n      listener.mql.removeListener(listener.fn);\n    }\n  }\n\n  /**\n   * Sets the default formatting of the change event label.\n   * This can be overridden by setting the `changeTemplate` option.\n   * @param {string} oldValue The value of the media query prior to the change.\n   * @param {string} newValue The value of the media query after the change.\n   * @return {string} The formatted event label.\n   */\n  changeTemplate(oldValue, newValue) {\n    return oldValue + ' => ' + newValue;\n  }\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n\n/**\n * Accepts a media query and returns a MediaQueryList object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryList} The matched media.\n */\nfunction getMediaList(media) {\n  return mediaMap[media] || (mediaMap[media] = window.matchMedia(media));\n}\n"]}